# Represents Event
type Event implements Node {
  # The ID of an object
  id: ID!
  name: String
  date: String
  startTime: String
  endTime: String
  venue: Venue
  createdAt: String
  updatedAt: String
  tags: [Tag]
  viewerRsvp: Boolean
  attendingFriendsOfViewer(after: String, first: Int, before: String, last: Int): UserConnection
}

# A connection to a list of items.
type EventConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [EventEdge]
}

# An edge in a connection.
type EventEdge {
  # The item at the end of the edge
  node: Event

  # A cursor for use in pagination
  cursor: String!
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String

  # When paginating forwards, the cursor to continue.
  endCursor: String
}

# The root of all... queries
type Query {
  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  user(id: ID!): User
}

# Represents Tag
type Tag implements Node {
  # The ID of an object
  id: ID!
  name: String
  createdAt: String
  updatedAt: String
}

# User data
type User implements Node {
  # The ID of an object
  id: ID!
  _id: String
  name: String
  email: String
  active: Boolean
  upcomingEvent(after: String, first: Int, before: String, last: Int): EventConnection
}

# A connection to a list of items.
type UserConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!

  # A list of edges.
  edges: [UserEdge]
}

# An edge in a connection.
type UserEdge {
  # The item at the end of the edge
  node: User

  # A cursor for use in pagination
  cursor: String!
}

# Represents Venue
type Venue implements Node {
  # The ID of an object
  id: ID!
  name: String
  createdAt: String
  updatedAt: String
}
